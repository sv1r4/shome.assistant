stages: 
  - build
#  - test
  - deploy

variables:  
  ASPNETCORE_ENVIRONMENT: Production  
  COMPOSE_HTTP_TIMEOUT: "1200"
  MAJOR_VERSION: 0
  MINOR_VERSION: 0
  STACK: shome-apps

before_script:  
  #- export TAG=$MAJOR_VERSION.$MINOR_VERSION.$CI_PIPELINE_IID-`echo $CI_COMMIT_REF_NAME | sed 's/\//_/g' | tr '[:upper:]' '[:lower:]'`.$CI_PIPELINE_ID
  - export TAG=$MAJOR_VERSION.$MINOR_VERSION-`echo $CI_COMMIT_REF_NAME | sed 's/\//_/g' | tr '[:upper:]' '[:lower:]'`-$CI_PIPELINE_ID
  - echo $TAG
  - export TAG=registry.gitlab.com/sv1r4/shome.assistant:$TAG
  - echo $TAG

    
build:images:
  image: tmaier/docker-compose
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  services:
    - docker:dind    
  script:    
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com  
    - cd ./src/shome.assistant  
    - mkdir ./secrets 
    - echo $GCP_KEY_DIALOGFLOW >> ./secrets/df_key.json
    - docker build -t $TAG .
    - docker push $TAG

    
deploy:laptop-assitant:
  stage: deploy
  variables:
    IMAGE_PREFIX: registry.gitlab.com/sv1r4/shome.dlna/
    GIT_SUBMODULE_STRATEGY: none
  script:
    - docker login -u $RPI_REGISTRY_USER -p $RPI_REGISTRY_PASSWORD registry.gitlab.com
    - export SECRET_DIR=/home/docker/shome.assistant/secrets 
    - mkdir -p $SECRET_DIR
    - echo $GCP_KEY_DIALOGFLOW >> $SECRET_DIR/df_key.json
    - if [[ $(docker ps -a -q -f name=s.assist) > 0 ]]; then docker rm -f $(docker ps -a -q -f name=s.assist) ; else echo docker s.assist not runnig ; fi
    - docker run --privileged --restart always -ti -d -e PROJECT_ID=$PROJECT_ID -e SENSIVITY=$SENSIVITY -e "GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/df_key.json" -v "$SECRET_DIR:/app/secrets/" --name=s.assist $TAG  
  only:
    - master
  tags:
    - laptop-assistant
    - shome

# if [[ $(docker ps -a -q -f name=s.assist) > 0 ]]; then docker rm -f $(docker ps -a -q -f name=s.assist) ; else echo docker s.assist not runnig ; fi
# docker build -t shome.assitant . && docker rm -f $(docker ps -a -q -f name=s.assist) && docker run --privileged --restart always -ti -d -e PROJECT_ID='***REMOVED***' -e SENSIVITY=0.8 --name=s.assist shome.assitant    


# test:    
#   image: docker
#   stage: test
#   services:
#     - docker:dind
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com   
#     - mkdir ./secrets 
#     - echo $GCP_KEY_DIALOGFLOW >> ./secrets/df_key.json
#     - echo $GOOGLE_APPLICATION_CREDENTIALS
#     - docker run -v ./secrets:/secrets   -e 'GOOGLE_APPLICATION_CREDENTIALS=/secrets/df_key.json' $TAG


# deploy:rpi-server:
#   stage: deploy
#   variables:
#     IMAGE_PREFIX: registry.gitlab.com/sv1r4/shome.scenario/
#     GIT_SUBMODULE_STRATEGY: none
#   script:
#     - echo "${IMAGE_PREFIX}<image>:${TAG}"
#     - docker login -u $RPI_REGISTRY_USER -p $RPI_REGISTRY_PASSWORD registry.gitlab.com
#     - docker stack deploy --with-registry-auth --compose-file ./docker-compose.deploy.yml $STACK
#   only:
#     - master
#   tags:
#     - rpi-server
#     - shome
