stages: 
  - build
  - deploy

variables:  
  COMPOSE_HTTP_TIMEOUT: "1200"
  MAJOR_VERSION: 0
  MINOR_VERSION: 1

before_script:  
  - export TAG=$MAJOR_VERSION.$MINOR_VERSION.$CI_PIPELINE_IID
  - echo $TAG
  - export TAG=registry.gitlab.com/sv1r4/shome.assistant:$TAG
  - echo $TAG
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com  

    
build:images:
  image: tmaier/docker-compose
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  services:
    - docker:dind    
  script:    
    - cd ./src/shome.assistant  
    - mkdir ./secrets 
    - echo $GCP_KEY_DIALOGFLOW >> ./secrets/df_key.json
    - docker build -t $TAG .
    - docker push $TAG

    
deploy:laptop-assitant:
  stage: deploy
  variables:
    IMAGE_PREFIX: registry.gitlab.com/sv1r4/shome.dlna/
    GIT_SUBMODULE_STRATEGY: none
  script:
    - export SECRET_DIR=/home/docker/shome.assistant/secrets 
    - mkdir -p $SECRET_DIR
    - echo $GCP_KEY_DIALOGFLOW >> $SECRET_DIR/df_key.json
    - if [[ $(docker ps -a -q -f name=s.assist) > 0 ]]; then docker rm -f $(docker ps -a -q -f name=s.assist) ; else echo docker s.assist not runnig ; fi
    - docker run --privileged --restart always -ti -d -e PROJECT_ID=$PROJECT_ID -e SENSIVITY=$SENSIVITY -e "GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/df_key.json" -v "$SECRET_DIR:/app/secrets/" --name=s.assist $TAG  
  only:
    - master
  tags:
    - laptop-assistant
    - shome
